import random
import re
import discord
from discord.ext import commands
from discord import app_commands

# same regex as v1
DICE_RE = re.compile(r"^\s*(\d{1,3})d(\d{1,3})(?:\s*([+-]\s*\d{1,4}))?\s*$")

class Roll(commands.Cog):
    """/roll dice like 1d20, 3d6+2, etc."""

    def __init__(self, bot):
        self.bot = bot

    @app_commands.command(name="roll", description="Roll dice (e.g., 1d20, 3d6+2)")
    @app_commands.describe(dice="Format: XdY or XdY+Z (e.g., 1d20, 3d6+2)")
    @app_commands.checks.cooldown(3, 10.0)  # per-user cooldown: 3 rolls / 10s
    async def roll(self, interaction: discord.Interaction, dice: str):
        m = DICE_RE.match(dice)
        if not m:
            await interaction.response.send_message("‚ùå Use formats like `1d20` or `3d6+2`.", ephemeral=True)
            return

        count, sides = int(m.group(1)), int(m.group(2))
        mod_str = m.group(3)
        bonus = int(mod_str.replace(" ", "")) if mod_str else 0

        if not (1 <= count <= 100 and 2 <= sides <= 1000 and -10000 <= bonus <= 10000):
            await interaction.response.send_message("‚ùå Dice expression is out of bounds.", ephemeral=True)
            return

        rolls = [random.randint(1, sides) for _ in range(count)]
        total = sum(rolls) + bonus

        detail = " + ".join(map(str, rolls))
        if bonus:
            detail += f" {'+' if bonus > 0 else ''}{bonus}"

        await interaction.response.send_message(
            f"üé≤ {dice.strip()} ‚Üí **{total}**  ({detail})"
        )

async def setup(bot):
    await bot.add_cog(Roll(bot))
